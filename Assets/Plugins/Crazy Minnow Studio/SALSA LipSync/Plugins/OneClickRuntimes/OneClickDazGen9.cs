using UnityEngine;namespace CrazyMinnow.SALSA.OneClicks{	/// <summary>	/// RELEASE NOTES:	///		Script generated by OneClickDump: v2.7.2.	///		See OneClickDump for version details.	/// ==========================================================================	/// PURPOSE: This script applies OneClick settings to a custom model system	///		for SALSA and/or EmoteR. This script was generated by OneClickDump	///		from a custom model and is not supported by Crazy Minnow Studio, LLC.	///		unless made available via the Official downloads portal.	/// ==========================================================================	/// DISCLAIMER: While every attempt has been made to ensure the safe content	///		and operation of these files, they are provided as-is, without	///		warranty or guarantee of any kind. By downloading and using these	///		files you are accepting any and all risks associated and release	///		Crazy Minnow Studio, LLC of any and all liability.	/// ==========================================================================	/// </summary>	public class OneClickDazGen9 : OneClickBase	{		public static void Setup(GameObject gameObject)		{			////////////////////////////////////////////////////////////////////////////////////////////////////////////			//	SETUP Requirements:			//		use NewExpression("expression name") to start a new viseme/emote expression.			//		use AddShapeComponent to add blendshape configurations, passing:			//			- string array of shape names to look for.			//			  : string array can be a single element.			//			  : string array can be a single regex search string.			//			    note: useRegex option must be set true.			//			- optional string name prefix for the component.			//			- optional blend amount (default = 1.0f).			//			- optional regex search option (default = false).			Init();			#region SALSA-Configuration			NewConfiguration(OneClickConfiguration.ConfigType.Salsa);			{				////////////////////////////////////////////////////////				// SMR regex searches (enable/disable/add as required).				AddSmrSearch("^Genesis(8_1(fe)?male|9)\\.Shape$");				AddSmrSearch("^Genesis9Mouth\\.Shape$");				////////////////////////////////////////////////////////				// Adjust SALSA settings to taste...				// - data analysis settings				autoAdjustAnalysis = true;				autoAdjustMicrophone = false;				audioUpdateDelay = 0.097f;				// - advanced dynamics settings				loCutoff = 0.015f;				hiCutoff = 0.87f;				useAdvDyn = true;				advDynPrimaryBias = 0.5f;				useAdvDynJitter = false;				// advDynJitterAmount = 0.1f;				// advDynJitterProb = 0.25f;				advDynSecondaryMix = 0f;				emphasizerTrigger = 0f;				////////////////////////////////////////////////////////				// Viseme setup...				NewExpression("w");				AddShapeComponent(new []{"__facs_ctrl_vW$"}, 0.08f, 0f, 0.08f, "__facs_ctrl_vW", .85f, true);				AddShapeComponent(new []{"__facs_ctrl_vUW$"}, 0.08f, 0f, 0.08f, "__facs_ctrl_vUW", .50f, true);				NewExpression("f");				AddShapeComponent(new []{"__facs_ctrl_vF$"}, 0.08f, 0f, 0.08f, "__facs_ctrl_vF", 1f, true);				NewExpression("t");				AddShapeComponent(new []{"__facs_ctrl_vW$"}, 0.08f, 0f, 0.08f, "__facs_ctrl_vW", .30f, true);				AddShapeComponent(new []{"__facs_ctrl_vIY$"}, 0.2f, 0f, 0.17f, "__facs_ctrl_vIY", .70f, true);				NewExpression("th");				AddShapeComponent(new []{"__facs_ctrl_vTH$"}, 0.2f, 0f, 0.17f, "__facs_ctrl_vTH", 1f, true);				NewExpression("ow");				AddShapeComponent(new []{"__facs_ctrl_vW$"}, 0.08f, 0f, 0.08f, "__facs_ctrl_vW", .30f, true);				AddShapeComponent(new []{"__facs_ctrl_vUW$"}, 0.08f, 0f, 0.08f, "__facs_ctrl_vUW", .72f, true);				AddShapeComponent(new []{"__facs_bs_MouthUp-Down$"}, 0.08f, 0f, 0.08f, "__facs_bs_MouthUp-Down", .80f, true, "");				AddShapeComponent(new []				                  {					                  "__facs_bs_JawOpenWide$",		// gen9					                  "__facs_jnt_JawOpen$"			// gen8.1				                  }, 0.08f, 0f, 0.08f, "__facs_bs_JawOpenWide", 0.47f, true);				NewExpression("ee");				AddShapeComponent(new []{"__facs_ctrl_vEH$"}, 0.2f, 0f, 0.17f, "__facs_ctrl_vEH", .25f, true);				AddShapeComponent(new []{"__facs_ctrl_vEE$"}, 0.2f, 0f, 0.17f, "__facs_ctrl_vEE", 1f, true);				AddShapeComponent(new []{"__facs_ctrl_MouthSmileWiden$"}, 0.2f, 0f, 0.17f, "__facs_ctrl_MouthSmileWiden", 0.70f, true);				AddShapeComponent(new []{"__facs_ctrl_MouthSmile$"}, 0.2f, 0f, 0.17f, "__facs_ctrl_MouthSmile", 0.32f, true);				AddShapeComponent(new []				                  {					                  "__facs_bs_JawOpenWide$",		// gen9					                  "__facs_jnt_JawOpen$"			// gen8.1				                  }, 0.08f, 0f, 0.08f, "__facs_bs_JawOpenWide", 0.06f, true);				NewExpression("oo");				AddShapeComponent(new []{"__facs_ctrl_vUW$"}, 0.08f, 0f, 0.08f, "__facs_ctrl_vUW", .41f, true);				AddShapeComponent(new []{"__facs_ctrl_vEE$"}, 0.2f, 0f, 0.17f, "__facs_ctrl_vEE", .39f, true);				AddShapeComponent(new []{"__facs_bs_MouthUp-DownMiddle$"}, 0.2f, 0f, 0.17f, "__facs_bs_MouthUp-DownMiddle", .40f, true);				AddShapeComponent(new []{"__facs_bs_MouthUp-Down$"}, 0.2f, 0f, 0.17f, "__facs_bs_MouthUp-Down", 1f, true);				AddShapeComponent(new []				                  {					                  "__facs_bs_JawOpenWide$",		// gen9					                  "__facs_jnt_JawOpen$"			// gen8.1				                  }, 0.08f, 0f, 0.08f, "__facs_bs_JawOpenWide", 1f, true);			}			#endregion // SALSA-configuration			#region EmoteR-Configuration			NewConfiguration(OneClickConfiguration.ConfigType.Emoter);			{				////////////////////////////////////////////////////////				// SMR regex searches (enable/disable/add as required).				AddSmrSearch("^Genesis(8_1(fe)?male|9)\\.Shape$");				AddSmrSearch("G9eyebrow.*\\.Shape$");				AddSmrSearch("(Genesis|(fe)?male)( 8_1 |9)Tear.*\\.Shape$");				AddSmrSearch("Genesis(8_1(fe)?male|9)Eyelashes.*\\.Shape$");				useRandomEmotes = false;				isChancePerEmote = true;				numRandomEmotesPerCycle = 0;				randomEmoteMinTimer = 1f;				randomEmoteMaxTimer = 2f;				randomChance = 0.5f;				useRandomFrac = false;				randomFracBias = 0.5f;				useRandomHoldDuration = false;				randomHoldDurationMin = 0.1f;				randomHoldDurationMax = 0.5f;				////////////////////////////////////////////////////////				// Emote setup...				NewExpression("soften");				AddEmoteFlags(false, true, false, 1f,false, false, 0f, EmoteRepeater.StartDelay.Immediately);				AddShapeComponent(new []{"__facs_ctrl_MouthSmile$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_MouthSmile", 0.4534f, true);				AddShapeComponent(new []{"__facs_ctrl_JawClench$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_JawClench", 0.533f, true);				AddShapeComponent(new []{"__facs_ctrl_BrowInnerUp$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_BrowInnerUp", 0.385f, true);				NewExpression("browsUp");				AddEmoteFlags(false, true, false, 1f,true, false, 0f, EmoteRepeater.StartDelay.Immediately);				AddShapeComponent(new []{"__facs_ctrl_BrowInnerUp$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_BrowInnerUp", 0.347f, true);				AddShapeComponent(new []{"__facs_ctrl_BrowUp$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_BrowUp", 0.499f, true);				NewExpression("browUpR");				AddEmoteFlags(false, true, false, 1f,false, false, 0f, EmoteRepeater.StartDelay.Immediately);				AddShapeComponent(new []{"__facs_bs_BrowOuterUpRight"}, 0.5f, 0.5f, 0.5f, "__facs_bs_BrowOuterUpRight", 0.699f, true);				AddShapeComponent(new []{"__facs_bs_BrowDownLeft"}, 0.5f, 0.5f, 0.5f, "__facs_bs_BrowDownLeft", 0.399f, true);				NewExpression("puff");				AddEmoteFlags(false, true, false, 1f,false, false, 0f, EmoteRepeater.StartDelay.Immediately);				AddShapeComponent(new []{"__facs_ctrl_CheekPuff$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_CheekPuff", 0.465f, true);				NewExpression("scrunch");				AddEmoteFlags(false, true, false, 1f,false, false, 0f, EmoteRepeater.StartDelay.Immediately);				AddShapeComponent(new []{"__facs_ctrl_JawClench$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_JawClench", 0.465f, true);				AddShapeComponent(new []{"__facs_ctrl_NoseSneer$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_NoseSneer", 0.465f, true);				AddShapeComponent(new []{"__facs_ctrl_EyeSquint$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_EyeSquint", 0.465f, true);				AddShapeComponent(new []{"__facs_ctrl_BrowDown$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_BrowDown", 0.465f, true);				NewExpression("squint");				AddEmoteFlags(false, true, false, 1f,false, false, 0f, EmoteRepeater.StartDelay.Immediately);				AddShapeComponent(new []{"__facs_ctrl_EyeSquint$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_EyeSquint", 0.7219999f, true);				AddShapeComponent(new []{"__facs_ctrl_MouthDimple$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_MouthDimple", 0.556f, true);				AddShapeComponent(new []{"__facs_ctrl_CheekSquint$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_CheekSquint", 0.616f, true);				NewExpression("focus");				AddEmoteFlags(false, true, false, 1f,false, false, 0f, EmoteRepeater.StartDelay.Immediately);				AddShapeComponent(new []{"__facs_ctrl_CheekSquint$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_CheekSquint", 0.83f, true);				AddShapeComponent(new []{"__facs_ctrl_EyeSquint$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_EyeSquint", 0.364f, true);				AddShapeComponent(new []{"__facs_ctrl_BrowSqueeze$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_BrowSqueeze", 0.789f, true);				AddShapeComponent(new []{"__facs_ctrl_JawClench$"}, 0.5f, 0.5f, 0.5f, "__facs_ctrl_JawClench", 0.863f, true);			}			#endregion // EmoteR-configuration			DoOneClickiness(gameObject);			if (selectedObject.GetComponent<SalsaAdvancedDynamicsSilenceAnalyzer>() == null)				selectedObject.AddComponent<SalsaAdvancedDynamicsSilenceAnalyzer>();			//Darrin's Tweaks			salsa.useTimingsOverride = true;			salsa.globalDurON = 0.125f;			salsa.globalDurOffBalance = -0.19f;			salsa.globalNuanceBalance = -0.225f;			emoter.NumRandomEmphasizersPerCycle = 3;			EmoteExpression emote;			emote = emoter.FindEmote("soften");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("browsUp");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("browUpR");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("puff");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("scrunch");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("squint");			if (emote != null)				emote.frac = 1f;			emote = emoter.FindEmote("focus");			if (emote != null)				emote.frac = 1f;			var silenceAnalyzer = selectedObject.GetComponent<SalsaAdvancedDynamicsSilenceAnalyzer>();			if (silenceAnalyzer)			{				silenceAnalyzer.silenceThreshold = 0.9f;				silenceAnalyzer.timingStartPoint = 0.25f;				silenceAnalyzer.timingEndVariance = 0.8f;				silenceAnalyzer.silenceSampleWeight = 0.95f;				silenceAnalyzer.bufferSize = 512;			}		}	}}